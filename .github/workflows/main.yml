# This is a basic workflow to help you get started with Actions
name: Staging CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: deploy

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm packages
        run: npm install

      - name: Install nwb globally
        run: npm install nwb -g

      - name: Create .env file
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
        run: |
          touch .env
          echo RAW_DATA_PATH=https://github.com/${{GITHUB_REPOSITORY}}/archive/ >> .env
          echo DATA_BUCKET={{ secrets.DATA_BUCKET }} >> .env
          echo AWS_ACCESS_ID={{ secrets.AWS_ACCESS_ID }} >> .env
          echo AWS_SECRET_KEY={{ secrets.AWS_SECRET_KEY }} >> .env
          echo MAPBOX_USERNAME={{ secrets.MAPBOX_USERNAME }} >> .env
          echo MAPBOX_TOKEN={{ secrets.MAPBOX_TOKEN }} >> .env
          echo DATA_VERSION=$RELEASE_VERSION >> .env
          echo DEPLOY=1 >> .env
          echo CLEAN=1 >> .env
          echo BUILD_GEOJSON=0 >> .env
          echo BUILD_TYPES={{ secrets.BUILD_TYPES }} >> .env
          echo BUILD_METRO_LIST=1 >> .env
          echo BAR_CHARTS=1 >> .env
          echo DEBUG=1 >> .env
          cat .env

      - name: Run nwb build
        run: nwb build-react-component --copy-files

      - name: Deploy ðŸš€
        uses: crazy-max/ghaction-github-pages@v1
        with:
          target_branch: gh-pages
          build_dir: demo/dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
