# This is a basic workflow to help you get started with Actions
name: Staging CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - '*.*.*'
    # branches: trigger-deploy

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Dump github context
        run:   echo "$GITHUB_CONTEXT"
        shell: bash
        env:
         GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Write .env file
        env:
          RELEASE_VERSION: echo ${GITHUB_REF:10
        run: |
          # echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          # echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
          touch .env
          echo RAW_DATA_PATH=https://github.com/$GITHUB_REPOSITORY/archive/ >> .env
          echo DATA_BUCKET={{ secrets.DATA_BUCKET }} >> .env
          echo AWS_ACCESS_ID={{ secrets.AWS_ACCESS_ID }} >> .env
          echo AWS_SECRET_KEY={{ secrets.AWS_SECRET_KEY }} >> .env
          echo MAPBOX_USERNAME={{ secrets.MAPBOX_USERNAME }} >> .env
          echo MAPBOX_TOKEN={{ secrets.MAPBOX_TOKEN }} >> .env
          echo DATA_VERSION=$RELEASE_VERSION >> .env
          echo DEPLOY=1 >> .env
          echo CLEAN=1 >> .env
          echo BUILD_GEOJSON=0 >> .env
          echo BUILD_TYPES={{ secrets.BUILD_TYPES }} >> .env
          echo BUILD_METRO_LIST=1 >> .env
          echo BAR_CHARTS=1 >> .env
          UPLOAD_MAPBOX_SHAPES=1 >> .env
          UPLOAD_MAPBOX_POINTS=1 >> .env
          echo DEBUG=1 >> .env
          cat .env
      - name: Pull down docker image
        run: docker pull hyperobjekt/ddk-etl
      - name: Build docker image
        run: docker build -t hyperobjekt/ddk-etl .
      - name: Run docker image
        run: docker run --env-file .env hyperobjekt/ddk-etl
